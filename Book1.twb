<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)+ (postgres)' inline='true' name='federated.05ptqif1cly4zi1b6nqbz08tko4w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' name='postgres.05vv1xs0trounq134kity10nsjw9'>
            <connection authentication='username-password' class='postgres' dbname='postgres' one-time-sql='' port='5432' server='data-analytics-course-2.c8g8r1deus2v.eu-central-1.rds.amazonaws.com' username='anjakurzhals' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='crops_canada_ak' table='[capstone_hydrogenious].[crops_canada_ak]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='crops_canada_ak' table='[capstone_hydrogenious].[crops_canada_ak]' type='table' />
          <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='crops_france_ak' table='[capstone_hydrogenious].[crops_france_ak]' type='table' />
          <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='weather_france' table='[capstone_hydrogenious].[weather_france]' type='table' />
          <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='weather_canada' table='[capstone_hydrogenious].[weather_canada]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[area (crops_france_ak)]' value='[crops_france_ak].[area]' />
          <map key='[area]' value='[crops_canada_ak].[area]' />
          <map key='[country (weather_france)]' value='[weather_france].[country]' />
          <map key='[country]' value='[weather_canada].[country]' />
          <map key='[element (crops_france_ak)]' value='[crops_france_ak].[element]' />
          <map key='[element]' value='[crops_canada_ak].[element]' />
          <map key='[item (crops_france_ak)]' value='[crops_france_ak].[item]' />
          <map key='[item]' value='[crops_canada_ak].[item]' />
          <map key='[station (weather_france)]' value='[weather_france].[station]' />
          <map key='[station]' value='[weather_canada].[station]' />
          <map key='[value (crops_france_ak)]' value='[crops_france_ak].[value]' />
          <map key='[value]' value='[crops_canada_ak].[value]' />
          <map key='[weather_date (weather_france)]' value='[weather_france].[weather_date]' />
          <map key='[weather_date]' value='[weather_canada].[weather_date]' />
          <map key='[weather_prcp (weather_france)]' value='[weather_france].[weather_prcp]' />
          <map key='[weather_prcp]' value='[weather_canada].[weather_prcp]' />
          <map key='[weather_pres (weather_france)]' value='[weather_france].[weather_pres]' />
          <map key='[weather_pres]' value='[weather_canada].[weather_pres]' />
          <map key='[weather_snow (weather_france)]' value='[weather_france].[weather_snow]' />
          <map key='[weather_snow]' value='[weather_canada].[weather_snow]' />
          <map key='[weather_tavg (weather_france)]' value='[weather_france].[weather_tavg]' />
          <map key='[weather_tavg]' value='[weather_canada].[weather_tavg]' />
          <map key='[weather_tmax (weather_france)]' value='[weather_france].[weather_tmax]' />
          <map key='[weather_tmax]' value='[weather_canada].[weather_tmax]' />
          <map key='[weather_tmin (weather_france)]' value='[weather_france].[weather_tmin]' />
          <map key='[weather_tmin]' value='[weather_canada].[weather_tmin]' />
          <map key='[weather_tsun (weather_france)]' value='[weather_france].[weather_tsun]' />
          <map key='[weather_tsun]' value='[weather_canada].[weather_tsun]' />
          <map key='[weather_wdir (weather_france)]' value='[weather_france].[weather_wdir]' />
          <map key='[weather_wdir]' value='[weather_canada].[weather_wdir]' />
          <map key='[weather_wpgt (weather_france)]' value='[weather_france].[weather_wpgt]' />
          <map key='[weather_wpgt]' value='[weather_canada].[weather_wpgt]' />
          <map key='[weather_wspd (weather_france)]' value='[weather_france].[weather_wspd]' />
          <map key='[weather_wspd]' value='[weather_canada].[weather_wspd]' />
          <map key='[year (crops_france_ak)]' value='[crops_france_ak].[year]' />
          <map key='[year (weather_canada)]' value='[weather_canada].[year]' />
          <map key='[year (weather_france)]' value='[weather_france].[year]' />
          <map key='[year]' value='[crops_canada_ak].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[crops_canada_ak]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item]</local-name>
            <parent-name>[crops_canada_ak]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[crops_canada_ak]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[element]</local-name>
            <parent-name>[crops_canada_ak]</parent-name>
            <remote-alias>element</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[crops_canada_ak]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>area</remote-name>
            <remote-type>129</remote-type>
            <local-name>[area (crops_france_ak)]</local-name>
            <parent-name>[crops_france_ak]</parent-name>
            <remote-alias>area</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>item</remote-name>
            <remote-type>129</remote-type>
            <local-name>[item (crops_france_ak)]</local-name>
            <parent-name>[crops_france_ak]</parent-name>
            <remote-alias>item</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[value (crops_france_ak)]</local-name>
            <parent-name>[crops_france_ak]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>element</remote-name>
            <remote-type>129</remote-type>
            <local-name>[element (crops_france_ak)]</local-name>
            <parent-name>[crops_france_ak]</parent-name>
            <remote-alias>element</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year (crops_france_ak)]</local-name>
            <parent-name>[crops_france_ak]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[weather_date (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tavg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tavg (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_tavg</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tmin (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_tmin</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tmax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tmax (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_tmax</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_prcp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_prcp (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_prcp</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_snow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_snow (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_snow</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wdir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wdir (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_wdir</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wspd (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_wspd</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wpgt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wpgt (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_wpgt</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_pres</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_pres (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_pres</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tsun</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather_tsun (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>weather_tsun</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (weather_france)]</local-name>
            <parent-name>[weather_france]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>station</remote-name>
            <remote-type>129</remote-type>
            <local-name>[station]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>station</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[weather_date]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_date</remote-alias>
            <ordinal>29</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tavg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tavg]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_tavg</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tmin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tmin]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_tmin</remote-alias>
            <ordinal>31</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tmax</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_tmax]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_tmax</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_prcp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_prcp]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_prcp</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_snow</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_snow]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_snow</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wdir</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wdir]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_wdir</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wspd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wspd]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_wspd</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_wpgt</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_wpgt]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_wpgt</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_pres</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_pres]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_pres</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>17</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_tsun</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weather_tsun]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>weather_tsun</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (weather_canada)]</local-name>
            <parent-name>[weather_canada]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>41</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='crops_canada_ak' datatype='table' name='[__tableau_internal_object_id__].[crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='crops_france_ak' datatype='table' name='[__tableau_internal_object_id__].[crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='weather_canada' datatype='table' name='[__tableau_internal_object_id__].[weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='weather_france' datatype='table' name='[__tableau_internal_object_id__].[weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11]' role='measure' type='quantitative' />
      <column caption='Area (Crops France Ak)' datatype='string' name='[area (crops_france_ak)]' role='dimension' type='nominal' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal' />
      <column caption='Country (Weather France)' datatype='string' name='[country (weather_france)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Element (Crops France Ak)' datatype='string' name='[element (crops_france_ak)]' role='dimension' type='nominal' />
      <column caption='Element' datatype='string' name='[element]' role='dimension' type='nominal' />
      <column caption='Item (Crops France Ak)' datatype='string' name='[item (crops_france_ak)]' role='dimension' type='nominal' />
      <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
      <column caption='Station (Weather France)' datatype='string' name='[station (weather_france)]' role='dimension' type='nominal' />
      <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
      <column caption='Value (Crops France Ak)' datatype='real' name='[value (crops_france_ak)]' role='measure' type='quantitative' />
      <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
      <column caption='Weather Date (Weather France)' datatype='datetime' name='[weather_date (weather_france)]' role='dimension' type='ordinal' />
      <column caption='Weather Date' datatype='datetime' name='[weather_date]' role='dimension' type='ordinal' />
      <column caption='Weather Prcp (Weather France)' datatype='real' name='[weather_prcp (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Prcp' datatype='real' name='[weather_prcp]' role='measure' type='quantitative' />
      <column caption='Weather Pres (Weather France)' datatype='real' name='[weather_pres (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Pres' datatype='real' name='[weather_pres]' role='measure' type='quantitative' />
      <column caption='Weather Snow (Weather France)' datatype='real' name='[weather_snow (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Snow' datatype='real' name='[weather_snow]' role='measure' type='quantitative' />
      <column caption='Weather Tavg (Weather France)' datatype='real' name='[weather_tavg (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Tavg' datatype='real' name='[weather_tavg]' role='measure' type='quantitative' />
      <column caption='Weather Tmax (Weather France)' datatype='real' name='[weather_tmax (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Tmax' datatype='real' name='[weather_tmax]' role='measure' type='quantitative' />
      <column caption='Weather Tmin (Weather France)' datatype='real' name='[weather_tmin (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Tmin' datatype='real' name='[weather_tmin]' role='measure' type='quantitative' />
      <column caption='Weather Tsun (Weather France)' datatype='string' name='[weather_tsun (weather_france)]' role='dimension' type='nominal' />
      <column caption='Weather Tsun' datatype='string' name='[weather_tsun]' role='dimension' type='nominal' />
      <column caption='Weather Wdir (Weather France)' datatype='real' name='[weather_wdir (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Wdir' datatype='real' name='[weather_wdir]' role='measure' type='quantitative' />
      <column caption='Weather Wpgt (Weather France)' datatype='real' name='[weather_wpgt (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Wpgt' datatype='real' name='[weather_wpgt]' role='measure' type='quantitative' />
      <column caption='Weather Wspd (Weather France)' datatype='real' name='[weather_wspd (weather_france)]' role='measure' type='quantitative' />
      <column caption='Weather Wspd' datatype='real' name='[weather_wspd]' role='measure' type='quantitative' />
      <column caption='Year (Crops France Ak)' datatype='integer' name='[year (crops_france_ak)]' role='dimension' type='quantitative' />
      <column caption='Year (Weather Canada)' datatype='integer' name='[year (weather_canada)]' role='dimension' type='quantitative' />
      <column caption='Year (Weather France)' datatype='integer' name='[year (weather_france)]' role='dimension' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[item (crops_france_ak)]' derivation='None' name='[none:item (crops_france_ak):nk]' pivot='key' type='nominal' />
      <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:item:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Broad beans, horse beans, dry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kiwi fruit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Potatoes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wheat&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anise, badian, fennel, coriander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cucumbers and gherkins&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oilcrops, Oil Equivalent&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sugar Crops Primary&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Barley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Garlic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pears&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Triticale&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Carrots and turnips&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Linseed&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Raspberries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Buckwheat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Leeks, other alliaceous vegetables&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pulses, Total&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Beans, dry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fruit, fresh nes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grain, mixed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peas, dry&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vegetables Primary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chillies and peppers, green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mushrooms and truffles&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oilcrops&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Strawberries&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Apples&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Fibre crops nes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oilseeds nes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sunflower seed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cherries, sour&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mustard seed&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Soybeans&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Beans, green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grapes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peas, green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vegetables, fresh nes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cauliflowers and broccoli&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Maize&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roots and Tubers, Total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cereals, Total&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maize, green&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rye&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chick peas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oats&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spinach&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cranberries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oilcrops, Cake Equivalent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cabbages and other brassicas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lentils&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pumpkins, squash and gourds&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Berries nes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Blueberries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hops&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plums and sloes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Watermelons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Apricots&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Fibre Crops Primary&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Onions, dry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tobacco, unmanufactured&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cherries&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Melons, other (inc.cantaloupes)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Safflower seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Canary seed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lettuce and chicory&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rapeseed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asparagus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fruit Primary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peaches and nectarines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tomatoes&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:item (crops_france_ak):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Cucumbers and gherkins&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tomatoes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sugar beet&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='crops_canada_ak' id='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1'>
            <properties context=''>
              <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='crops_canada_ak' table='[capstone_hydrogenious].[crops_canada_ak]' type='table' />
            </properties>
          </object>
          <object caption='crops_france_ak' id='crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F'>
            <properties context=''>
              <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='crops_france_ak' table='[capstone_hydrogenious].[crops_france_ak]' type='table' />
            </properties>
          </object>
          <object caption='weather_canada' id='weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE'>
            <properties context=''>
              <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='weather_canada' table='[capstone_hydrogenious].[weather_canada]' type='table' />
            </properties>
          </object>
          <object caption='weather_france' id='weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11'>
            <properties context=''>
              <relation connection='postgres.05vv1xs0trounq134kity10nsjw9' name='weather_france' table='[capstone_hydrogenious].[weather_france]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[item]' />
              <expression op='[item (crops_france_ak)]' />
            </expression>
            <first-end-point object-id='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1' />
            <second-end-point object-id='crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[year]' />
              <expression op='[year (weather_canada)]' />
            </expression>
            <first-end-point object-id='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)_45A94A43280247ADBDCC9BC387A820B1' />
            <second-end-point object-id='weather_canada (capstone_hydrogenious.weather_canada)_7938519E809D47D3B31D767AFFD1FAFE' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[year (crops_france_ak)]' />
              <expression op='[year (weather_france)]' />
            </expression>
            <first-end-point object-id='crops_france_ak (capstone_hydrogenious.crops_france_ak)_63570E64AA6E4B7188C157AE86FF3F9F' />
            <second-end-point object-id='weather_france (capstone_hydrogenious.weather_france)_10156A1FDED74D2DA73FA1E3E6305C11' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Canada'>
      <table>
        <view>
          <datasources>
            <datasource caption='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)+ (postgres)' name='federated.05ptqif1cly4zi1b6nqbz08tko4w' />
          </datasources>
          <datasource-dependencies datasource='federated.05ptqif1cly4zi1b6nqbz08tko4w'>
            <column-instance column='[weather_tavg]' derivation='Avg' name='[avg:weather_tavg:qk]' pivot='key' type='quantitative' />
            <column caption='Element' datatype='string' name='[element]' role='dimension' type='nominal' />
            <column caption='Item' datatype='string' name='[item]' role='dimension' type='nominal' />
            <column-instance column='[element]' derivation='None' name='[none:element:nk]' pivot='key' type='nominal' />
            <column-instance column='[item]' derivation='None' name='[none:item:nk]' pivot='key' type='nominal' />
            <column-instance column='[station]' derivation='None' name='[none:station:nk]' pivot='key' type='nominal' />
            <column-instance column='[year (weather_canada)]' derivation='None' name='[none:year (weather_canada):qk]' pivot='key' type='quantitative' />
            <column caption='Station' datatype='string' name='[station]' role='dimension' type='nominal' />
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_prcp]' derivation='Sum' name='[sum:weather_prcp:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='real' name='[value]' role='measure' type='quantitative' />
            <column caption='Weather Prcp' datatype='real' name='[weather_prcp]' role='measure' type='quantitative' />
            <column caption='Weather Tavg' datatype='real' name='[weather_tavg]' role='measure' type='quantitative' />
            <column caption='Year (Weather Canada)' datatype='integer' name='[year (weather_canada)]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:element:nk]'>
            <groupfilter function='member' level='[none:element:nk]' member='&quot;Yield&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:item:nk]' member='&quot;Carrots and turnips&quot;' />
              <groupfilter function='member' level='[none:item:nk]' member='&quot;Sugar beet&quot;' />
              <groupfilter function='member' level='[none:item:nk]' member='&quot;Tomatoes&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station:nk]'>
            <groupfilter function='level-members' level='[none:station:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:element:nk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[avg:weather_tavg:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:weather_prcp:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value:qk] + ([federated.05ptqif1cly4zi1b6nqbz08tko4w].[avg:weather_tavg:qk] + [federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:weather_prcp:qk]))</rows>
        <cols>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year (weather_canada):qk]</cols>
      </table>
      <simple-id uuid='{4C044539-8246-47B9-B4DC-B364E42CF386}' />
    </worksheet>
    <worksheet name='France - Cucumber'>
      <table>
        <view>
          <datasources>
            <datasource caption='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)+ (postgres)' name='federated.05ptqif1cly4zi1b6nqbz08tko4w' />
          </datasources>
          <datasource-dependencies datasource='federated.05ptqif1cly4zi1b6nqbz08tko4w'>
            <column-instance column='[weather_tavg (weather_france)]' derivation='Avg' name='[avg:weather_tavg (weather_france):qk]' pivot='key' type='quantitative' />
            <column caption='Item (Crops France Ak)' datatype='string' name='[item (crops_france_ak)]' role='dimension' type='nominal' />
            <column-instance column='[weather_date (weather_france)]' derivation='Month' name='[mn:weather_date (weather_france):ok]' pivot='key' type='ordinal' />
            <column-instance column='[item (crops_france_ak)]' derivation='None' name='[none:item (crops_france_ak):nk]' pivot='key' type='nominal' />
            <column-instance column='[station (weather_france)]' derivation='None' name='[none:station (weather_france):nk]' pivot='key' type='nominal' />
            <column caption='Station (Weather France)' datatype='string' name='[station (weather_france)]' role='dimension' type='nominal' />
            <column-instance column='[value (crops_france_ak)]' derivation='Sum' name='[sum:value (crops_france_ak):qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_prcp (weather_france)]' derivation='Sum' name='[sum:weather_prcp (weather_france):qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_date (weather_france)]' derivation='Month-Trunc' name='[tmn:weather_date (weather_france):qk]' pivot='key' type='quantitative' />
            <column caption='Value (Crops France Ak)' datatype='real' name='[value (crops_france_ak)]' role='measure' type='quantitative' />
            <column caption='Weather Date (Weather France)' datatype='datetime' name='[weather_date (weather_france)]' role='dimension' type='ordinal' />
            <column caption='Weather Prcp (Weather France)' datatype='real' name='[weather_prcp (weather_france)]' role='measure' type='quantitative' />
            <column caption='Weather Tavg (Weather France)' datatype='real' name='[weather_tavg (weather_france)]' role='measure' type='quantitative' />
            <column-instance column='[weather_date (weather_france)]' derivation='Year' name='[yr:weather_date (weather_france):ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]'>
            <groupfilter function='member' level='[none:item (crops_france_ak):nk]' member='&quot;Cucumbers and gherkins&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station (weather_france):nk]'>
            <groupfilter function='level-members' level='[none:station (weather_france):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[tmn:weather_date (weather_france):qk]' included-values='in-range'>
            <min>#1980-01-01 00:00:00#</min>
            <max>#2019-12-01 00:00:00#</max>
          </filter>
          <slices>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station (weather_france):nk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[tmn:weather_date (weather_france):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[avg:weather_tavg (weather_france):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value (crops_france_ak):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:weather_prcp (weather_france):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.05ptqif1cly4zi1b6nqbz08tko4w].[avg:weather_tavg (weather_france):qk] + ([federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value (crops_france_ak):qk] + [federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:weather_prcp (weather_france):qk]))</rows>
        <cols>([federated.05ptqif1cly4zi1b6nqbz08tko4w].[yr:weather_date (weather_france):ok] / [federated.05ptqif1cly4zi1b6nqbz08tko4w].[mn:weather_date (weather_france):ok])</cols>
      </table>
      <simple-id uuid='{51B63D83-686E-45EB-879D-4C660E142BA9}' />
    </worksheet>
    <worksheet name='France - Cucumber-Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='crops_canada_ak (capstone_hydrogenious.crops_canada_ak)+ (postgres)' name='federated.05ptqif1cly4zi1b6nqbz08tko4w' />
          </datasources>
          <datasource-dependencies datasource='federated.05ptqif1cly4zi1b6nqbz08tko4w'>
            <column caption='Area (Crops France Ak)' datatype='string' name='[area (crops_france_ak)]' role='dimension' type='nominal' />
            <column caption='Item (Crops France Ak)' datatype='string' name='[item (crops_france_ak)]' role='dimension' type='nominal' />
            <column-instance column='[weather_tavg]' derivation='Max' name='[max:weather_tavg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[area (crops_france_ak)]' derivation='None' name='[none:area (crops_france_ak):nk]' pivot='key' type='nominal' />
            <column-instance column='[item (crops_france_ak)]' derivation='None' name='[none:item (crops_france_ak):nk]' pivot='key' type='nominal' />
            <column-instance column='[value (crops_france_ak)]' derivation='Sum' name='[sum:value (crops_france_ak):qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_prcp]' derivation='Sum' name='[sum:weather_prcp:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_date]' derivation='Year-Trunc' name='[tyr:weather_date:ok]' pivot='key' type='ordinal' />
            <column caption='Value (Crops France Ak)' datatype='real' name='[value (crops_france_ak)]' role='measure' type='quantitative' />
            <column caption='Weather Date' datatype='datetime' name='[weather_date]' role='dimension' type='ordinal' />
            <column caption='Weather Prcp' datatype='real' name='[weather_prcp]' role='measure' type='quantitative' />
            <column caption='Weather Tavg' datatype='real' name='[weather_tavg]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:area (crops_france_ak):nk]'>
            <groupfilter function='member' level='[none:area (crops_france_ak):nk]' member='&quot;France&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]'>
            <groupfilter function='member' level='[none:item (crops_france_ak):nk]' member='&quot;Cucumbers and gherkins&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value (crops_france_ak):qk]' included-values='in-range' />
          <slices>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value (crops_france_ak):qk]</column>
            <column>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:area (crops_france_ak):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[max:weather_tavg:qk]' />
              <text column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:value (crops_france_ak):qk]' />
              <text column='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[sum:weather_prcp:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[tyr:weather_date:ok]</cols>
      </table>
      <simple-id uuid='{0E00FB20-A599-439D-8A23-35E59A8FE2B9}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Canada'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:element:nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station:nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year (weather_canada):qk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C57D1CE5-06F3-4226-ABED-DF724B67A9EB}' />
    </window>
    <window class='worksheet' maximized='true' name='France - Cucumber'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station (weather_france):nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[mn:weather_date (weather_france):ok]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:element:nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item:nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:station (weather_france):nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year (crops_france_ak):qk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year:qk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[yr:weather_date (weather_france):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{67EC2E58-0D37-4D67-BDCF-22E393345218}' />
    </window>
    <window class='worksheet' name='France - Cucumber-Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[mn:weather_date (weather_france):ok]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[mn:weather_date:ok]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:area (crops_france_ak):nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:item (crops_france_ak):nk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year (crops_france_ak):qk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[none:year (weather_france):qk]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[yr:weather_date (weather_france):ok]</field>
            <field>[federated.05ptqif1cly4zi1b6nqbz08tko4w].[yr:weather_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{665CC0F6-CDC0-4869-BB2A-C655D7157F74}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Canada' width='384'>
      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
      A5BlB92dXRQVnqaitJTh4SEAgoKCmb94MUvvWEFsfBySNLN6IVy6A8jJyeHnP/85NTU1FBQU
      OJdiz8QuGE+qq6mmvbUV/4AAFi9bPu7PqlQq8ufPp7G+zvnBdOWK2ma18uF776EoCqvWrXfr
      fG9JkoiKiSEqJoYld6xAp9PNqGMiIyubx7/0FT58711MRiMJSUkkJCcTFxdPZHT0dQPd7qD3
      82P+osXMW7CQtpZmik6fprL8As0NDVeL4kVx/6c/TU7e5IvYjQwPc+XyZbQaDUkpNy+1IalU
      rFy7lqryC5SeP8f6zZsJC5/ai6jhoSEOvrsPCbhr632svXPjtNzVZ82Zw//6u7/ng3f3U1R4
      mmOHD1FfW8u2hz5DVEwMVquV2ksXOXvqFA11tc4EHZ+YxB2rVpE/f8GMucC5EZenger1es6c
      OcPvf/97JEnCbrfz/e9/n2yxKfeEyLLsnDa2bMVK/CcwayCvYD7v7n2Lpvp6hoeGXLpqv1BS
      wuXuLsIjIli2YuVt//5sl56ZyVe++XfT/roqlYqUtHRS0tK5a+t9lJ0rpvDkCfp6r/DqSy/y
      1b//1g0HbW9Ha3MTsiyTkJR0y7uKlLR0MrKyqauppriwkM1btk7qtW8dWzMWs5mklBTWbdw0
      rRcOAYGBbPvMZ8nJy3eODTz329+Qv2AhzY0NGHpH90rQanXkz1/AspUrSc/MmlEXNzfjcgJo
      b2+ns7OTzZs3M3fuXE6fPu113T/erKujnbrq6tHbznXrJ3R1FxIaSkp6Ok319VSVX+CO2+wG
      spjNHD74PgBrNtw5o69cZrOQ0FDWbtzEqvXr2fHCC1yqrKC8tGTSCaC5cbT+f2r6jfv/P06t
      VrN6/XrqaqopPHmC1es3TOgixVVjexMkpaR65MQqSRK5+fkkpiTz7t63KDt3jtLiImD0/Vi+
      ajWLli6b8kH66ebyX1qlUhEYGEhCQgKdnZ1ERUVRXl7uzthmLUVROHb4MIqiMH/R4gkP6KpU
      KubNXwBAxYWy294p7HzRWQx9vUTHxLJ4+fhdToLnqdUaFl3dS7aqvHxSi+Vkh8M5Ayg9c2Ib
      lGRmzyEhKQnjyAjnzp5x+bVvGZss0/ax4nSeFBwcwsOPPc7jX/oyq9at59EvPMV3/+mf2Xj3
      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
    </thumbnail>
    <thumbnail height='384' name='France - Cucumber' width='384'>
      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
      XUjBN/wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='190' name='France - Cucumber-Table' width='384'>
      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
      /h91UhSfgPro6gAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
